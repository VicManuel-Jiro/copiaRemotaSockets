
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ConnectException;
import java.net.Socket;
import java.net.UnknownHostException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Jiro
 */
public class Cliente extends javax.swing.JFrame {

    int puerto = 9000;
    String ip = "";
    String tarea = "leer$", msg;

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
        this.TxtDestino.setEnabled(false);
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accion = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtOrigen = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        TxtDestino = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtLog = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setText("Cliente");

        jLabel2.setText("Direccion origen:");

        TxtOrigen.setToolTipText("Dirección del archivo");
        TxtOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtOrigenActionPerformed(evt);
            }
        });

        accion.add(jRadioButton1);
        jRadioButton1.setText("Copiar");
        jRadioButton1.setActionCommand("copiar");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        accion.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Leer");
        jRadioButton2.setActionCommand("leer");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Dirección destino:");

        TxtLog.setColumns(20);
        TxtLog.setRows(5);
        jScrollPane1.setViewportView(TxtLog);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtDestino)
                            .addComponent(TxtOrigen))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TxtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtOrigenActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        this.tarea = "copiar$";
        this.TxtDestino.setText("");
        this.TxtDestino.setEnabled(true);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //this.accion.getSelection().getActionCommand()=leer o copiar

        if (this.TxtOrigen.getText().matches("^(?<ParentPath>(?:[a-zA-Z]\\:|\\\\\\\\[\\w\\s\\.]+\\\\[\\w\\s\\.$]+)\\\\(?:[\\w\\s\\.]+\\\\)*)(?<BaseName>[\\w\\s\\.]*?).txt$") || this.TxtOrigen.getText().matches("(?<BaseName>[\\w\\s\\.]*?).txt$")) {
            try {
                int error = 0;
                String m;
                //envio de mensaje
                Socket socket = new Socket(this.ip, this.puerto);
                DataOutputStream enviar_datos = new DataOutputStream(socket.getOutputStream());
                if (this.tarea.equals("leer$")) {
                    System.out.println(this.tarea);
                    this.msg = this.tarea + this.TxtOrigen.getText() + "$";
                    error = 0;
                } else {
                    if (this.TxtDestino.getText().matches("^(?<ParentPath>(?:[a-zA-Z]\\:|\\\\\\\\[\\w\\s\\.]+\\\\[\\w\\s\\.$]+)\\\\(?:[\\w\\s\\.]+\\\\)*)(?<BaseName>[\\w\\s\\.]*?).txt$") || this.TxtDestino.getText().matches("(?<BaseName>[\\w\\s\\.]*?).txt$")) {
                        System.out.println(this.tarea);
                        this.msg = this.tarea + this.TxtOrigen.getText() + "$" + this.TxtDestino.getText() + "$";
                        error = 0;
                    } else {
                        this.TxtLog.append("La ruta de destino no es valida\n");
                        error = 1;
                    }

                }
                if (error == 0) {
                    enviar_datos.writeUTF(this.msg);
                    //respuesta
                    DataInputStream respuesta = new DataInputStream(socket.getInputStream());
                    m = respuesta.readUTF();
                    if (m.contains("Conexión establecida$")) {
                        this.TxtLog.append("Conexion establecida\n");
                        this.TxtLog.append("\n" + msg.replace("$", " ") + "\n");
                        //tarea
                        this.TxtLog.append(m.replace("Conexión establecida$", "") + "\n\n");
                        //this.TxtLog.append("Realizado.\n");
                    } else {
                        this.TxtLog.append("\n" + msg.replace("$", " ") + "\n\n");
                        //tarea
                        this.TxtLog.append(m + "\n\n");
                    }
                }

                socket.close();
            } catch (ConnectException e1) {
                this.TxtLog.append(e1.getMessage() + "\n");
            } catch (UnknownHostException e2) {
                System.out.println(e2.getMessage() + "\n");
            } catch (IOException e3) {
                System.out.println(e3.getMessage() + "\n");
            }
        } else {
            this.TxtLog.append("La ruta de origen no es valida\n");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
public void ip(String ip){
 this.ip=ip;
 try {
            Socket socketInicial = new Socket(this.ip, this.puerto);
            DataOutputStream enviar_datos = new DataOutputStream(socketInicial.getOutputStream());
            enviar_datos.writeUTF("Abriendo conexión");
            DataInputStream respuesta = new DataInputStream(socketInicial.getInputStream());
            msg = respuesta.readUTF();
            System.out.println(msg);
            if (msg.matches("^(?<ParentPath>(?:[a-zA-Z]\\:|\\\\\\\\[\\w\\s\\.]+\\\\[\\w\\s\\.$]+)\\\\(?:[\\w\\s\\.]+\\\\)*)(?<BaseName>[\\w\\s\\.]*?).txt$")|| msg.matches("(?<BaseName>[\\w\\s\\.]*?).txt$")) {
                System.out.println("el regex sirve");
                this.TxtOrigen.setText(msg);
            }
            this.TxtLog.append("Conexion establecida\n");
            socketInicial.close();
        } catch (ConnectException e1) {
            this.TxtLog.append(e1.getMessage() + "\n");
        } catch (UnknownHostException e2) {
            System.out.println(e2.getMessage() + "\n");
        } catch (IOException e3) {
            System.out.println(e3.getMessage() + "\n");
        }
}
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        this.tarea = "leer$";
        this.TxtDestino.setText("");
        this.TxtDestino.setEnabled(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }//*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtDestino;
    private javax.swing.JTextArea TxtLog;
    private javax.swing.JTextField TxtOrigen;
    private javax.swing.ButtonGroup accion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
